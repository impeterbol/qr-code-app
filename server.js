const express = require ('express');
const mongoose = require("mongoose");
const QRCode = require('qrcode');
const PORT = process.env.PORT || 3000;
const User = require("./models/User")
const bodyParser = require('body-parser');


//init app
const app = express();

//adding ejs for dynamic rendering
app.set('view engine', 'ejs');


let url = "mongodb://localhost:27017/peterdb";

// define a middleware that can be used by the server to read JSON payload.
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: true }));

mongoose.connect(url, { useUnifiedTopology: true, useNewUrlParser: true });

const connection = mongoose.connection;

connection.once("open", function() {
    console.log("MongoDB database connection established successfully");

    app.listen(PORT,()=> console.log("server is running on " + PORT));
  });



//general route
app.get("/", (req, res) => {
    res.render("index");
  });

  app.get("/login", (req, res) => {
    res.render("login");
  });

  app.post("/login", (req, res) => {
 
  });

  app.get("/register", (req, res) => {
    res.render("register");
  });

  app.post("/register", (req, res) => {
    req.body.name
    req.body.password
  });


  


  //admin path to add new product
  app.get("/path/admin", function(req, res) {
    User.find({}, function(err, result) {
      if (err) {
        res.send(err);
      } else {
        res.render("admin");
      }
    });
  });

//once added by admin - form will post product info via this path - new product route
app.post("/addingnewproduct", (req, res) => {
console.log("HERE REQ BODY" + req.body);


    var myData = new User(req.body);
  
    myData.save()

      .then(item => {
          console.log(item._id);
          console.log({item:item});
        res.render("success", {item});
      })
      
      .catch(err => {
        res.status(400).send("unable to save to database");
      });
  });



//user path to render product info from db based on the unique id generated by mongo
app.get("/:id",function(req, res) {
    var thisIsId = req.params.id;
   

    User.find({
        _id: thisIsId
    }, function(err, data) {
     
      if (err) {
        res.send(err);
      } else {

        QRCode.toDataURL(`http://localhost:3000/${thisIsId}`, function (err, url) {
            
            res.render("products",{results:data, qr:url});
            });
         
      }
    });
  });



  
//fetching everything to see if it was posted if unsure
  app.get("/api/fetch", function(req, res) {
    User.find({}, function(err, result) {
      if (err) {
        res.send(err);
      } else {
        res.send(result);
      }
    });
  });








